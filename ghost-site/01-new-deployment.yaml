apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mydatasciencebook
    app.kubernetes.io/component: mydatasciencebook
    app.kubernetes.io/instance: mydatasciencebook
    app.kubernetes.io/name: mydatasciencebook
    app.kubernetes.io/part-of: mydatasciencebook
    app.openshift.io/runtime-namespace: mydatasciencebook
  name: mydatasciencebook
  namespace: mydatasciencebook
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mydatasciencebook
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        app: mydatasciencebook
        deploymentconfig: mydatasciencebook
    spec:
      serviceAccountName: bookstack
      serviceAccount: bookstack
      containers:
      - envFrom:
        - secretRef:
            name: mydatasciencebook-content
        image: ghcr.io/requarks/wiki:2
        imagePullPolicy: Always
        name: mydatasciencebook
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - envFrom:
        - secretRef:
            name: mydatasciencebook-db-env
        image: postgres:15-alpine
        name: db
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mydatasciencebook-db
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mydatasciencebook-db
        persistentVolumeClaim:
          claimName: mydatasciencebook-db
